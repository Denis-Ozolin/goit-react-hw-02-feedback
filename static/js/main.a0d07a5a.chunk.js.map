{"version":3,"sources":["components/Feedback/SectionTitle.jsx","components/Feedback/FeedbackOptions.jsx","components/Feedback/Notofication.jsx","components/Feedback/Statistics.jsx","components/Feedback/App.js","index.js"],"names":["Section","title","children","FeedbackOptions","onLeaveFeedback","type","onClick","Notification","message","Statistics","options","good","neutral","bad","total","positivePercentage","App","state","props","statisticsMarkup","handleCounter","setState","prevState","showStatistics","handleTotalFeedback","handlePositiveFeedbackPercentage","Math","round","this","require","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAOeA,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gCACE,6BAAMD,IACLC,MCKUC,EARS,SAAC,GAAD,IAAEC,EAAF,EAAEA,gBAAF,OACtB,gCACE,wBAAQC,KAAK,SAASC,QAASF,EAA/B,kBACA,wBAAQC,KAAK,SAASC,QAASF,EAA/B,qBACA,wBAAQC,KAAK,SAASC,QAASF,EAA/B,qBCHWG,EADM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCU3BC,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,+BACE,wCAAWA,EAAQC,QACnB,2CAAcD,EAAQE,WACtB,uCAAUF,EAAQG,OAClB,yCAAYH,EAAQI,SACpB,qDAAwBJ,EAAQK,mBAAhC,WCEEC,E,4MAUJC,MAAQ,CACNN,KAAM,EAAKO,MAAMP,KACjBC,QAAS,EAAKM,MAAMN,QACpBC,IAAK,EAAKK,MAAML,IAChBC,MAAO,EAAKI,MAAMJ,MAClBC,mBAAoB,EAAKG,MAAMH,mBAC/BI,iBAAkB,EAAKD,MAAMC,kB,EAG/BC,cAAgB,WACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BX,KAAMW,EAAUX,KAAO,MAEzB,EAAKY,iBACL,EAAKC,sBACL,EAAKC,oC,EAGPD,oBAAsB,WACpB,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BR,MAAOQ,EAAUX,KAAOW,EAAUV,QAAUU,EAAUT,S,EAI1DY,iCAAmC,WACjC,EAAKJ,UAAS,SAAAC,GAAS,MAAK,CAC1BP,mBAAoBW,KAAKC,MAAwB,IAAjBL,EAAUX,KAAcW,EAAUR,Y,EAItES,eAAiB,WACf,EAAKF,UAAS,iBAAO,CACnBF,kBAAkB,O,4CAItB,WACE,OACE,qCACE,cAAC,EAAD,aAASlB,MAAM,wBAAwBC,UAAQ,GAA/C,WACE,cAAC,EAAD,CAAiBQ,QAASkB,KAAKX,MAAOb,gBAAiBwB,KAAKR,mBAE5DQ,KAAKX,MAAME,kBAAqB,cAAC,EAAD,CAAcX,QAAQ,sBACvDoB,KAAKX,MAAME,kBACV,cAAC,EAAD,aAASlB,MAAM,aAAaC,UAAQ,GAApC,WACE,cAAC,EAAD,CAAYQ,QAASkB,KAAKX,iB,GAzDhBY,EAAQ,GAAtBC,WAEFd,EACGe,aAAe,CACpBpB,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,EACpBI,kBAAkB,GAuDPH,Q,MChEfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a0d07a5a.chunk.js","sourcesContent":["const Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{ title }</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Section;\r\n  \r\n","const FeedbackOptions = ({onLeaveFeedback }) => (\r\n  <div>\r\n    <button type=\"button\" onClick={onLeaveFeedback}>good</button>\r\n    <button type=\"button\" onClick={onLeaveFeedback}>neutral</button>\r\n    <button type=\"button\" onClick={onLeaveFeedback}>bad</button>\r\n  </div>\r\n);\r\n\r\nexport default FeedbackOptions;","const Notification = ({ message }) => <p>{message}</p>;\r\nexport default Notification;","const Statistics = ({ options }) => (\r\n  <ul>  \r\n    <li>good: {options.good}</li>\r\n    <li>neutral: {options.neutral}</li>\r\n    <li>bad: {options.bad}</li>\r\n    <li>total: {options.total}</li>\r\n    <li>positive feedback: {options.positivePercentage}%</li>\r\n  </ul> \r\n);\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport Section from './SectionTitle';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Notification from './Notofication';\r\nimport Statistics from './Statistics';\r\n\r\nconst { Component } = require(\"react\");\r\n\r\nclass App extends Component {\r\n  static defaultProps = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    positivePercentage: 0,\r\n    statisticsMarkup: false,\r\n  }\r\n\r\n  state = {\r\n    good: this.props.good,\r\n    neutral: this.props.neutral,\r\n    bad: this.props.bad,\r\n    total: this.props.total,\r\n    positivePercentage: this.props.positivePercentage,\r\n    statisticsMarkup: this.props.statisticsMarkup,\r\n  }\r\n\r\n  handleCounter = () => {\r\n    this.setState(prevState => ({\r\n      good: prevState.good + 1,\r\n    }));\r\n    this.showStatistics();\r\n    this.handleTotalFeedback();\r\n    this.handlePositiveFeedbackPercentage();\r\n  }\r\n\r\n  handleTotalFeedback = () => {\r\n    this.setState(prevState => ({\r\n      total: prevState.good + prevState.neutral + prevState.bad,\r\n    }));\r\n  }\r\n\r\n  handlePositiveFeedbackPercentage = () => {\r\n    this.setState(prevState => ({\r\n      positivePercentage: Math.round((prevState.good * 100) / prevState.total),\r\n    }));\r\n  }\r\n\r\n  showStatistics = () => {\r\n    this.setState(() => ({\r\n      statisticsMarkup: true\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave Feedback\" children>\r\n          <FeedbackOptions options={this.state} onLeaveFeedback={this.handleCounter} />\r\n        </Section>\r\n        {!this.state.statisticsMarkup && (<Notification message=\"No feedback given\" />)}\r\n        {this.state.statisticsMarkup && (\r\n          <Section title=\"Statistics\" children>\r\n            <Statistics options={this.state} />\r\n          </Section>)}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/Feedback/App';\nimport 'modern-normalize/modern-normalize.css';\n// import './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}